type: function_sql
category: transform_numeric
author:
  name: Bartosz Figas
  url: https://www.linkedin.com/in/bartosz-figas
  avatar_url: "--"
description: |
  Get the label of the `bin_range` in which belongs `value`.
arguments:
  - name: value
    type: any type
  - name: bin_bounds
    type: any type
  - name: labels
    type: array<string>
  
output:
  name: label
  type: string
examples:
  - description: ""
    arguments:
      - "25"
      - "[0, 50, 60, 90, 100]"
      - "['Fail', 'Wait for result exam', 'Pass', 'Pass with mention']"
    output: "Fail"
  - description: ""
    arguments:
      - "-10"
      - "[0, 50, 60, 90, 100]"
      - "['Fail', 'Wait for result exam', 'Pass', 'Pass with mention']"
    output: "UNDEFINED"
code: |
  (
    select
      case
        when value < bin_bounds[offset(0)] then "]-∞, " || cast(bin_bounds[offset(0)] as string) || "["
        when value > bin_bounds[ordinal(array_length(bin_bounds))] then "]"     || cast(bin_bounds[ordinal(array_length(bin_bounds))] as string) || ", +∞["
        when value = bin_bounds[ordinal(array_length(bin_bounds))] and array_length(bin_bounds) = 1 then cast(bin_bounds[offset(0)] as string)
        when value = bin_bounds[ordinal(array_length(bin_bounds))] then "["     || cast(bin_bounds[ordinal(array_length(bin_bounds) - 1)] as string) || ", " || cast(bin_bounds[ordinal(array_length(bin_bounds))] as string) || "]"
        else (
          with offsets as (
            select
              offset - 1 as lower_offset,
              offset as upper_offset,
            from unnest(bin_bounds) as x
            with offset
            where x > value limit 1
          )

          select (
            "[" ||
              cast(bin_bounds[offset(greatest(0, lower_offset))] as string) || ", " ||
              cast(bin_bounds[offset(upper_offset)] as string) ||
            if(upper_offset < array_length(bin_bounds) - 1, "[", "]")
          )
          from offsets
        )
      end
  )
